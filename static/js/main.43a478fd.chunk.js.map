{"version":3,"sources":["components/CapitalLetter.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.js","App.js","index.js"],"names":["CapitalLetter","str","toUpperCase","slice","Buttons","oneOfState","onChange","map","key","onClick","value","Section","title","children","Notification","message","Statistics","props","total","Object","keys","App","state","good","neutral","bad","handleChangeFeedback","e","target","setState","countTotalFeedback","reduce","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","options","positiveFeedback","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAAe,SAASA,EAAcC,GACpC,OAAKA,EACEA,EAAI,GAAGC,cAAgBD,EAAIE,MAAM,GADvBF,E,WCGJ,SAASG,EAAT,GAA4C,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SAC5C,OACE,6BACGD,EAAWE,KAAI,SAAAC,GAAG,OACjB,6BACE,wBAAQC,QAASH,EAAUI,MAAOF,EAAlC,SACGR,EAAcQ,MAFVA,QCNF,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCNQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICIE,SAASC,EAAWC,GACjC,OACE,6BACGA,EAAMC,MAAQ,EACbC,OAAOC,KAAKH,GAAOV,KAAI,SAAAC,GAAG,OACxB,6BACW,qBAARA,EACGR,EAAcQ,GAAO,KAAOS,EAAMT,GAClC,sBAAwBS,EAAMT,GAAO,KAHlCA,MAOX,cAACM,EAAD,CAAcC,QAAQ,wB,ICZTM,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,qBAAuB,SAAAC,GACrB,IAAMjB,EAAQiB,EAAEC,OAAOlB,MACvB,EAAKmB,SAAL,eAAiBnB,EAAQ,EAAKY,MAAMZ,GAAS,K,EAG/CoB,mBAAqB,WAEnB,OADmBX,OAAOC,KAAK,EAAKE,OAClBS,QAAO,SAACb,EAAOV,GAAR,OAAgBU,EAAQ,EAAKI,MAAMd,KAAM,I,EAGpEwB,gCAAkC,WAChC,IAAMC,EAAgB,EAAKH,qBAC3B,OAAOG,EACHC,KAAKC,MAAyB,IAAlB,EAAKb,MAAMC,KAAcU,GACrCA,G,4CAGN,WACE,MAA+BG,KAAKd,MAA5BC,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QACbS,EAAgBG,KAAKN,qBACrBO,EAAUlB,OAAOC,KAAKgB,KAAKd,OAC3BgB,EAAmBF,KAAKJ,kCAE9B,OACE,gCACE,cAACrB,EAAD,CAASC,MAAM,wBAAf,SACE,cAACR,EAAD,CAASC,WAAYgC,EAAS/B,SAAU8B,KAAKV,yBAE/C,cAACf,EAAD,CAASC,MAAM,aAAf,SACE,cAACI,EAAD,CACEO,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLP,MAAOe,EACPK,iBAAkBA,a,GAzCGC,IAAMC,WCAvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.43a478fd.chunk.js","sourcesContent":["export default function CapitalLetter(str) {\r\n  if (!str) return str;\r\n  return str[0].toUpperCase() + str.slice(1);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CapitalLetter from '../CapitalLetter';\r\n\r\nexport default function Buttons({ oneOfState, onChange }) {\r\n  return (\r\n    <ul>\r\n      {oneOfState.map(key => (\r\n        <li key={key}>\r\n          <button onClick={onChange} value={key}>\r\n            {CapitalLetter(key)}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nButtons.propTypes = {\r\n  oneOfState: PropTypes.array.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object,\r\n};\r\n","export default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n","import React from 'react';\r\nimport CapitalLetter from '../CapitalLetter';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\n\r\nexport default function Statistics(props) {\r\n  return (\r\n    <ul>\r\n      {props.total > 0 ? (\r\n        Object.keys(props).map(key => (\r\n          <li key={key}>\r\n            {key !== 'positiveFeedback'\r\n              ? CapitalLetter(key) + ': ' + props[key] + ''\r\n              : 'Positive feedback: ' + props[key] + '%'}\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Buttons from './components/FeedbackOptions/';\r\nimport Section from './components/Section';\r\nimport Statistics from './components/Statistics/Statistics';\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleChangeFeedback = e => {\r\n    const value = e.target.value;\r\n    this.setState({ [value]: this.state[value] + 1 });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const oneOfState = Object.keys(this.state);\r\n    return oneOfState.reduce((total, key) => total + this.state[key], 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const totalFeedback = this.countTotalFeedback();\r\n    return totalFeedback\r\n      ? Math.round((this.state.good * 100) / totalFeedback)\r\n      : totalFeedback;\r\n  };\r\n\r\n  render() {\r\n    const { good, bad, neutral } = this.state;\r\n    const totalFeedback = this.countTotalFeedback();\r\n    const options = Object.keys(this.state);\r\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <Buttons oneOfState={options} onChange={this.handleChangeFeedback} />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={totalFeedback}\r\n            positiveFeedback={positiveFeedback}\r\n          />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}